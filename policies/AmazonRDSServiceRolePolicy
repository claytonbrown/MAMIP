{
    "PolicyVersion": {
        "CreateDate": "2024-07-01T22:42:05Z", 
        "VersionId": "v14", 
        "Document": {
            "Version": "2012-10-17", 
            "Statement": [
                {
                    "Action": [
                        "rds:CrossRegionCommunication"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "CrossRegionCommunication"
                }, 
                {
                    "Action": [
                        "ec2:AllocateAddress", 
                        "ec2:AssociateAddress", 
                        "ec2:AuthorizeSecurityGroupIngress", 
                        "ec2:CreateCoipPoolPermission", 
                        "ec2:CreateLocalGatewayRouteTablePermission", 
                        "ec2:CreateNetworkInterface", 
                        "ec2:CreateSecurityGroup", 
                        "ec2:DeleteCoipPoolPermission", 
                        "ec2:DeleteLocalGatewayRouteTablePermission", 
                        "ec2:DeleteNetworkInterface", 
                        "ec2:DeleteSecurityGroup", 
                        "ec2:DescribeAddresses", 
                        "ec2:DescribeAvailabilityZones", 
                        "ec2:DescribeCoipPools", 
                        "ec2:DescribeInternetGateways", 
                        "ec2:DescribeLocalGatewayRouteTablePermissions", 
                        "ec2:DescribeLocalGatewayRouteTables", 
                        "ec2:DescribeLocalGatewayRouteTableVpcAssociations", 
                        "ec2:DescribeLocalGateways", 
                        "ec2:DescribeSecurityGroups", 
                        "ec2:DescribeSubnets", 
                        "ec2:DescribeVpcAttribute", 
                        "ec2:DescribeVpcs", 
                        "ec2:DisassociateAddress", 
                        "ec2:ModifyNetworkInterfaceAttribute", 
                        "ec2:ModifyVpcEndpoint", 
                        "ec2:ReleaseAddress", 
                        "ec2:RevokeSecurityGroupIngress", 
                        "ec2:CreateVpcEndpoint", 
                        "ec2:DescribeVpcEndpoints", 
                        "ec2:DeleteVpcEndpoints", 
                        "ec2:AssignPrivateIpAddresses", 
                        "ec2:UnassignPrivateIpAddresses"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "Ec2"
                }, 
                {
                    "Action": [
                        "logs:CreateLogGroup"
                    ], 
                    "Resource": [
                        "arn:aws:logs:*:*:log-group:/aws/rds/*", 
                        "arn:aws:logs:*:*:log-group:/aws/docdb/*", 
                        "arn:aws:logs:*:*:log-group:/aws/neptune/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "CloudWatchLogs"
                }, 
                {
                    "Action": [
                        "logs:CreateLogStream", 
                        "logs:PutLogEvents", 
                        "logs:DescribeLogStreams"
                    ], 
                    "Resource": [
                        "arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*", 
                        "arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*", 
                        "arn:aws:logs:*:*:log-group:/aws/neptune/*:log-stream:*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "CloudWatchStreams"
                }, 
                {
                    "Action": [
                        "kinesis:CreateStream", 
                        "kinesis:PutRecord", 
                        "kinesis:PutRecords", 
                        "kinesis:DescribeStream", 
                        "kinesis:SplitShard", 
                        "kinesis:MergeShards", 
                        "kinesis:DeleteStream", 
                        "kinesis:UpdateShardCount"
                    ], 
                    "Resource": [
                        "arn:aws:kinesis:*:*:stream/aws-rds-das-*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "Kinesis"
                }, 
                {
                    "Action": [
                        "cloudwatch:PutMetricData"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "cloudwatch:namespace": [
                                "AWS/DocDB", 
                                "AWS/Neptune", 
                                "AWS/RDS", 
                                "AWS/Usage"
                            ]
                        }
                    }, 
                    "Sid": "CloudWatch"
                }, 
                {
                    "Action": [
                        "secretsmanager:GetRandomPassword"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "SecretsManagerPassword"
                }, 
                {
                    "Action": [
                        "secretsmanager:DeleteSecret", 
                        "secretsmanager:DescribeSecret", 
                        "secretsmanager:PutSecretValue", 
                        "secretsmanager:RotateSecret", 
                        "secretsmanager:UpdateSecret", 
                        "secretsmanager:UpdateSecretVersionStage", 
                        "secretsmanager:ListSecretVersionIds"
                    ], 
                    "Resource": [
                        "arn:aws:secretsmanager:*:*:secret:rds!*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "secretsmanager:ResourceTag/aws:secretsmanager:owningService": "rds"
                        }
                    }, 
                    "Sid": "SecretsManagerSecret"
                }, 
                {
                    "Action": "secretsmanager:TagResource", 
                    "Resource": "arn:aws:secretsmanager:*:*:secret:rds!*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "secretsmanager:ResourceTag/aws:secretsmanager:owningService": "rds"
                        }, 
                        "ForAllValues:StringEquals": {
                            "aws:TagKeys": [
                                "aws:rds:primaryDBInstanceArn", 
                                "aws:rds:primaryDBClusterArn"
                            ]
                        }
                    }, 
                    "Sid": "SecretsManagerTags"
                }
            ]
        }, 
        "IsDefaultVersion": true
    }
}
